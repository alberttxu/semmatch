ScriptName findMeshes

Debug = 1

### semmatch arguments
maxPts = 20            # return subset of all found points
minSize = 30           # (microns) - find squares at least this size
minBorder = 400    # (microns) - find squares at least this far away from the edge of the map

# maps will be dynamically binned down to the following pixel size

acquire = 1                                    # True = 1 ; False = 0

# names of temporary files used by semmatch
outputNav = semmatch_nav.nav
image = LMM.jpg

ReportIfNavOpen
If $reportedValue1 != 2
   Exit
Endif
ReportNavFile 1
navfile = $reportedValue1$reportedValue2
navdir = $reportedValue3
SetDirectory $navdir
SaveNavigator

If $acquire != 1 AND $acquire != 0
   Echo acquire should be either 1 or 0
   Exit
Endif

If $Debug == 1
   debugStr = /k
ElseIf $Debug == 0
   debugStr = /c
Else
   Echo Debug should be either 1 or 0
   Exit
Endif

## load and bin MMM map
ReportNavItem
If $RepVal5 != 2        # if not a map item
   Echo Not a map item. Select a Map item from the navigator.
   Exit
Endif
MAP = $navLabel
Echo Map Label: $MAP
# load map into Q buffer
SetUserSetting BufferToReadInto 16
SetUserSetting LoadMapsUnbinned 1
# uncheck Montage Controls "Align pieces in overview"
ReportUserSetting MontageAlignPieces alignChecked
If $alignChecked == 1
   SetUserSetting MontageAlignPieces 0
Endif
LoadNavMap

ImageProperties Q width height
pixelsize = $repVal5

Copy Q A
Show Q

## make a jpeg image
SaveToOtherFile A JPG JPG $image
Echo saved $image

ReportOtherItem -1
newLabel = $navIntLabel + 1

RunInShell cmd $debugStr "conda activate semmatch && \
semmatch \
--navfile $navfile \
--mapLabel $MAP \
--newLabel $newLabel \
--output $outputNav \
--acquire $acquire \
--image $image \
--pixelsize $pixelsize \
findMeshes --maxPts $maxPts --minSize $minSize "

MergeNavFile $outputNav
If $alignChecked == 1
   SetUserSetting MontageAlignPieces 1
Endif
Show Q
